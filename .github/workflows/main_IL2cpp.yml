name: Development Build Workflow

#on: push
on:
  workflow_dispatch: {}

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  #buildWebGL:
  #  needs: testRunner
  #  name: Build for WebGL 🖥️
  #  runs-on: ubuntu-latest
  #  strategy:
  #    fail-fast: false
  #  steps:
  #    - name: Checkout code
  #      uses: actions/checkout@v2
#
  #    - name: Create LFS file list
  #      run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
#
  #    - name: Restore LFS cache
  #      uses: actions/cache@v2
  #      id: lfs-cache
  #      with:
  #        path: .git/lfs
  #        key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
#
  #    - name: Git LFS Pull
  #      run: |
  #        git lfs pull
  #        git add .
  #        git reset --hard
  #    - name: Restore Library cache
  #      uses: actions/cache@v2
  #      with:
  #        path: Library
  #        key: Library-build-WebGL
  #        restore-keys: |
  #          Library-build-
  #          Library-
  #    - uses: game-ci/unity-builder@v2
  #      with:
  #        targetPlatform: WebGL
#
  #    - uses: actions/upload-artifact@v2
  #      with:
  #        name: build-WebGL
  #        path: build/WebGL

  buildWindows:
    #needs: testRunner
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: windows-2021
    strategy:
      fail-fast: false
    matrix:
        projectPath:
          - test-project
        targetPlatform:
          - StandaloneWindows # Build a Windows 32-bit standalone.
          - StandaloneWindows64 # Build a Windows 64-bit standalone.

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true

      - uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{ hashFiles(matrix.projectPath) }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
            Library-${{ matrix.projectPath }}-
            Library-

      - uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          customParameters: '-myParameter myValue -myBoolean -ThirdParameter andItsValue'

      - uses: actions/upload-artifact@v2
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}

  #buildAndroid:
  #  needs: testRunner
  #  name: Build for Android 📱
  #  runs-on: ubuntu-latest
  #  strategy:
  #    fail-fast: false
  #  steps:
  #    - name: Checkout code
  #      uses: actions/checkout@v2
#
  #    - name: Create LFS file list
  #      run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
#
  #    - name: Restore LFS cache
  #      uses: actions/cache@v2
  #      id: lfs-cache
  #      with:
  #        path: .git/lfs
  #        key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
#
  #    - name: Git LFS Pull
  #      run: |
  #        git lfs pull
  #        git add .
  #        git reset --hard
  #    - name: Restore Library cache
  #      uses: actions/cache@v2
  #      with:
  #        path: Library
  #        key: Library-build-Android
  #        restore-keys: |
  #          Library-build-
  #          Library-
  #    - uses: game-ci/unity-builder@v2
  #      with:
  #        targetPlatform: Android
#
  #    - uses: actions/upload-artifact@v2
  #      with:
  #        name: build-Android
  #        path: build/Android
#
#
  #deployPages:
  #  needs: buildWebGL
  #  name: Deploy to Github Pages 🚀
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Checkout code
  #      uses: actions/checkout@v2
#
  #    - uses: actions/download-artifact@v2
  #      with:
  #        name: build-WebGL
  #        path: build
#
  #    - name: Deploy 🚀
  #      uses: JamesIves/github-pages-deploy-action@4.1.4
  #      with:
  #        branch: gh-pages
  #        folder: build/WebGL